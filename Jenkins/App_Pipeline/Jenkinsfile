pipeline {
    agent any

    environment {
        DOCKER_CREDS = credentials('Docker_Creds')
        SNYK_TOKEN = credentials('Snyk_Token_ID')  // Use the credential ID here
        GIT_CRED = credentials('GitHub_Private_Repo')  // Use the GitHub credentials ID here
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the private GitHub repository using stored credentials
                git branch: 'main',
                    url: 'https://github.com/Macarious-GK/Book.git',
                    credentialsId: 'GitHub_Private_Repo'
            }
        }

        stage('Test Code Linter with Bandit') {
            steps {
                script {
                    sh '''
                    echo "Running Bandit for security checks..."
                    bandit -r . -f json -o bandit_output.json
                    
                    # Check if Bandit found any issues
                    if grep '"issue_severity":' bandit_output.json; then
                        echo "Bandit found security issues:"
                        cat bandit_output.json
                        echo "Failing the pipeline due to Bandit issues"
                        exit 1
                    else
                        echo "No issues found by Bandit"
                    fi
                    '''
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    echo "Building Docker image..."
                    sh 'docker build -t macarious25siv/books:V4 .'
                }
            }
        }

        stage('Test Docker Image with Snyk') {
            steps {
                script {
                    sh '''
                    echo "Running Snyk Container Test..."
                    snyk auth $SNYK_TOKEN
                    snyk container test macarious25siv/books:V4 --file=Dockerfile
                    
                    # If vulnerabilities are found, print the issues and fail the pipeline
                    if [ $? -ne 0 ]; then
                        echo "Snyk found vulnerabilities in the Docker image:"
                        snyk container test macarious25siv/books:V4 --file=Dockerfile --json | jq .
                        echo "Failing the pipeline due to Snyk vulnerabilities"
                        exit 1
                    else
                        echo "No vulnerabilities found by Snyk"
                    fi
                    '''
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    // Login to Docker Hub using stored credentials
                    echo "Logging in to Docker Hub..."
                    sh 'echo $DOCKER_CREDS_PSW | docker login -u $DOCKER_CREDS_USR --password-stdin'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the image to Docker Hub
                    echo "Pushing Docker image to Docker Hub..."
                    sh 'docker push macarious25siv/books:V4'
                }
            }
        }
    }
    
    post {
        always {
            // Clean up the workspace and logout from Docker Hub
            echo "Cleaning up the workspace and logging out from Docker Hub..."
            sh 'docker logout'
            cleanWs()
        }
    }
}