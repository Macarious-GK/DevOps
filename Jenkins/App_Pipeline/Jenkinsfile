@Library('Jenkins-Shared-Library') _
pipeline {
    agent any

    environment {
        GIT_CRED = credentials('GitHub_Private_Repo')  // Use the GitHub credentials ID here
    }

    stages {
        stage('Checkout: Clone Repository') {
            steps {
                // Clone the private GitHub repository using stored credentials
                git branch: 'main',
                    url: 'https://github.com/Macarious-GK/DevOps.git',
                    credentialsId: 'GitHub_Private_Repo'
            }
        }

        stage('Linter_Stage: Flake8 --> Syntax errors') {
            steps {
                // Run Flake8, save the output to a report, and check for fatal errors (e.g., syntax errors)
                script {
                    dir('App'){
                        runFlake8Linting()   
                    }                 
                }
            }
        }

        stage('SAST Stage: Bandit --> Static Security Checks') {
            steps {
                // Run Bandit as SAST Stage to check vulnerabilities Staticly
                script {
                    dir('App'){
                    sastBanditCheck()
                    }
                }
            }
        }  

        stage('App Feature Testing: UnitTesting') {
            steps {
                // Unit Testing For Django APP
                script {
                    dir('App') {
                        unitTestDjango()
                    }   
                }
            }
        }
        stage('Docker Image Build') {
            steps {
                // Build Docker Image Stage
                script {
                    dir('Docker') {
                        buildDockerImage('macarious25siv/books:V4')
                    }
                }
            }
        }

        stage('Docker Image Scanning Stage: Snyk') {
            steps {
                script {
                    // Snyk Ligon &&  Test the Docker image with Snyk
                    dir('Docker') {
                        snykLogin('Snyk_Token_ID')
                        snykTestDockerImage(imageName:'macarious25siv/books:V4')
                    }       
                }
            }
        }

        stage('Docker Hub Login & Push Image ') {
            steps {
                script {
                    // Login to Docker Hub using stored credentials, Then Push Image
                    dockerHubLogin('Docker_Creds')
                    pushDockerImage('macarious25siv/books:V4')
                }
            }
        }

        stage('Check EKS Cluster'){
            steps{
                // Check if Cluster is Exist or not by Name
                script{
                    checkEksCluster('aws-jenkins-credentials', 'Macarious-eks-cluster','us-east-2')
                }
            }
        }

        stage('Deployment '){
            steps{
                // Deploy your Application using K8s Files
                script{
                    dir('K8s'){
                        deploymentStage()
                    }
                }
            }
        }
    }
    
    
    post {
        always {
            // Clean up the workspace and logout from Docker Hub
            echo "Cleaning up the workspace and logging out from Docker Hub..."
            sh 'docker logout'
            cleanWs()
        }
    }
}